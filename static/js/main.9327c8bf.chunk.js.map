{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-fileter/index.js","components/item-status-fileter/item-status-fileter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/App/App.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","addItem","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","text","newItem","toggleProperty","items","arr","propName","oldItem","console","log","length","toLowerCase","indexOf","doneCount","todoCount","visibleItems","serch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9327c8bf.chunk.js","sourcesContent":["import AppHeader from './app-header'\r\n\r\nexport default AppHeader","import React from 'react'\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return <div className='app-header d-flex'>\r\n        <h1>My Todo List</h1>\r\n        <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n}\r\n\r\nexport default AppHeader","import SearchPanel from './search-panel'\r\n\r\nexport default SearchPanel","import React, {Component} from 'react'\r\nimport './search-panel.css'\r\n\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearchChange(term)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <input\r\n            type='text'\r\n            placeholder=\"type to search\"\r\n            className='form-control search-input'\r\n            value={this.state.term}\r\n            onChange={this.onSearchChange}\r\n        ></input>\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react'\r\nimport   './todo-list-item.css'\r\n\r\nclass TodoListItem extends Component {\r\n\r\n\r\n  render () {\r\n\r\n   const {label, onDeleted, onToggleImportant, onToggleDone, done, important} = this.props;\r\n\r\n \r\n\r\n   let classNames = 'todo-list-item'\r\n\r\n   if (done){\r\n     classNames += ' done';\r\n   };\r\n\r\n   if (important){\r\n    classNames += ' important'; \r\n   }\r\n\r\n  return (\r\n     <div className = {classNames}> \r\n             <div className='todo-list-item-label' \r\n              onClick = {onToggleDone}\r\n             >   \r\n             {label}\r\n             </div>\r\n             <div className = 'button'>\r\n             <button type = 'button' className = 'btn btn-outline-success '\r\n              onClick = {onToggleImportant}\r\n             >\r\n               <i className= 'fa fa-exclamation' />\r\n             </button>\r\n\r\n             <button type = 'button' className = 'btn btn-outline-danger '\r\n             onClick = {onDeleted}\r\n             \r\n             >\r\n               <i className= 'fa fa-trash-o' />\r\n             </button>\r\n             </div>\r\n             \r\n      </div>\r\n  )\r\n  }\r\n}\r\n\r\n export default TodoListItem","import TodoList from './todo-list'\r\n\r\nexport default TodoList","import React from 'react';\r\nimport TodoListItem from './todo-list-item/todo-list-item';\r\nimport './todo-list.css'\r\n\r\n\r\nexport const TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\r\n\r\n    const elements = todos.map((item) => {\r\n        const {id, ...itemProps} = item\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem {...itemProps}\r\n                              onDeleted={() => onDeleted(id)}\r\n                              onToggleImportant={() => onToggleImportant(id)}\r\n                              onToggleDone={() => onToggleDone(id)}\r\n                />\r\n            </li>);\r\n    });\r\n\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\nexport default TodoList","import ItemStatusFilter from './item-status-fileter'\r\n\r\nexport default ItemStatusFilter","import React, {Component} from 'react'\r\nimport './item-status-fileter.css'\r\n\r\nclass ItemStatusFilter extends Component {\r\n\r\n  buttons = [\r\n    {name: 'all', label: 'All'},\r\n    {name: 'active', label: 'Active'},\r\n    {name: 'done', label: 'Done'},\r\n  ]\r\n\r\n\r\n  render() {\r\n\r\n    const {filter, onFilterChange} = this.props\r\n\r\n    const buttons = this.buttons.map(({name, label}) => {\r\n\r\n      const isActive = (filter === name)\r\n\r\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n      return (\r\n          <button type='button'\r\n                  className={`btn ${clazz}`}\r\n                  key={name}\r\n                  onClick={() => onFilterChange(name)}> {label} </button>\r\n      )\r\n    })\r\n    return (\r\n        <div className='btn-group'>\r\n          {buttons}\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ItemStatusFilter","import ItemAddForm from \"./item-add-form\";\r\n\r\n\r\nexport default ItemAddForm","import React, {Component} from 'react'\r\nimport './item-add-form.css'\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.addItem(this.state.label)\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className='item-add-form d-flex'\r\n                  onSubmit={this.onSubmit}>\r\n                <input type='text'\r\n                       className='form-control'\r\n                       onChange={this.onLabelChange}\r\n                       placeholder='Whats needs to be done'\r\n                       value={this.state.label}\r\n                ></input>\r\n                <button className='btn btn-outline-secondary'\r\n                > Add Item\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list'\r\nimport ItemStatusFilter from '../item-status-fileter'\r\nimport ItemAddForm from '../item-add-form'\r\nimport './App.css'\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffe'),\r\n            this.createTodoItem('make Awesome App'),\r\n            this.createTodoItem('Have a lunch'),\r\n        ],\r\n        term: '',\r\n        filter: 'active'\r\n\r\n    };\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id)\r\n            const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)]\r\n            return {\r\n                todoData: newArray\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    addItem = (text) => {\r\n\r\n        const newItem = this.createTodoItem(text)\r\n\r\n        this.setState(({todoData}) => {\r\n            const newArr = [\r\n                ...todoData, newItem\r\n            ]\r\n            return {\r\n                todoData: newArr\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id)\r\n        const oldItem = arr[idx]\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName]}\r\n        console.log(  this.state)\r\n        \r\n        return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)]\r\n        \r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        })\r\n    }\r\n\r\n    serch(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n        })\r\n    }\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n    }\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    }\r\n\r\n\r\n    render() {\r\n        const {todoData, term, filter} = this.state;\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        const visibleItems = this.filter(this.serch(todoData, term), filter)\r\n\r\n        return (\r\n            <div className='todo-app'>\r\n                \r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                <div>\r\n                <SearchPanel onSearchChange={this.onSearchChange}/>\r\n                <ItemStatusFilter\r\n                          filter={filter}\r\n                          onFilterChange={this.onFilterChange}\r\n                />\r\n                </div>\r\n                <TodoList todos={visibleItems}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}\r\n                />\r\n                <ItemAddForm addItem={this.addItem}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}